//===================================================================
// COPYRIGHT  2020/09/16
//===================================================================
// CM_CUSGTOAddin.cpp
// Header definition of class CM_CUSGTOAddin
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2020/09/16 Creation: Code generated by the 3DS wizard
//===================================================================

#include "CM_CUSMBOMAddin.h"
//C library
#include "iostream.h"

CATImplementClass(CM_CUSMBOMAddin, DataExtension, CATBaseUnknown, CM_CUSMBOMAddinLT);


//#include "CATIPPRLiveProcessWkbAddin.h"
//Planning Structure
//#include "TIE_DELIPPRLivePPREditorWkbAddin.h"
//TIE_DELIPPRLivePPREditorWkbAddin(CM_CUSGTOAddin);
//CATImplementBOA(DELIPPRLivePPREditorWkbAddin, CM_CUSProcessPlanAddin);

//#include "TIE_CATIPPRLiveProcessWkbAddin.h"
//TIE_CATIPPRLiveProcessWkbAddin(CM_CUSGTOAddin);

#include "TIE_CATIAfrGeneralWksAddin.h"
TIE_CATIAfrGeneralWksAddin(CM_CUSMBOMAddin);

//-----------------------------------------------------------------------------
// CM_CUSGTOAddin : constructor
//-----------------------------------------------------------------------------
CM_CUSMBOMAddin::CM_CUSMBOMAddin():CATBaseUnknown()
{
//
//TODO: Add the constructor code here
//
}

//-----------------------------------------------------------------------------
// CM_CUSGTOAddin : destructor
//-----------------------------------------------------------------------------

CM_CUSMBOMAddin::~CM_CUSMBOMAddin()
{
//
// TODO: Place code here.
//
}

void CM_CUSMBOMAddin::CreateCommands()
{

	//FTZW
	CATAfrCommandHeader::CATCreateCommandHeader("CMCreateZWSystemHdr", "PlanningStructureService",
		"CMCreateFTZWSystemCmd", (void *)NULL,
		"CM_CUSMBOMAddin", CATFrmAvailable);

	//GTO
	CATAfrCommandHeader::CATCreateCommandHeader("CMCreateGTOSystemHdr", "PlanningStructureService",
		"CMCreateGTOSystemCmd", (void *)NULL,
		"CM_CUSMBOMAddin", CATFrmAvailable);

	//JGD
	CATAfrCommandHeader::CATCreateCommandHeader("CMCreateJGDSystemHdr", "PlanningStructureService",
		"CMCreateJGDSystemCmd", (void *)NULL,
		"CM_CUSMBOMAddin", CATFrmAvailable);

	//GTOBOM
	CATAfrCommandHeader::CATCreateCommandHeader("CMCreateGTOBOMSystemHdr", "PlanningStructureService",
		"CMCreateGTOBOMSystemCmd", (void *)NULL,
		"CM_CUSMBOMAddin", CATFrmAvailable);

	//Operation
	CATAfrCommandHeader::CATCreateCommandHeader("CMCreateOperationSystemHdr", "PlanningStructureService",
		"CMCreateWorkingProcedureCmd", (void *)NULL,
		"CM_CUSMBOMAddin", CATFrmAvailable);

	//GTO OP Duplicate
	CATAfrCommandHeader::CATCreateCommandHeader("CMDuplicateGTOOPSystemHdr", "PlanningStructureService",
		"CMDuplicateGTOOperationCmd", (void *)NULL,
		"CM_CUSMBOMAddin", CATFrmAvailable);

}
CATCmdContainer *CM_CUSMBOMAddin::CreateToolbars()
{
	cout << "CAAECafContextualMenuEllipse::CAAECafContextualMenuEllipse" << endl;
	NewAccess(CATCmdContainer, pGTODesignSection, GTODesignSection);

	NewAccess(CATCmdContainer, pCMMBOMTlb, CMMBOMTlb);
	SetAccessChild(pGTODesignSection, pCMMBOMTlb);

	//FTZW
	NewAccess(CATCmdStarter, pCMFTZWAssembly, CMFTZWAssembly);
	SetAccessCommand(pCMFTZWAssembly, "CMCreateZWSystemHdr");
	SetAccessChild(pCMMBOMTlb, pCMFTZWAssembly);

	//GTO
	NewAccess(CATCmdStarter, pCMGTOPart, CMGTOPart);
	SetAccessCommand(pCMGTOPart, "CMCreateGTOSystemHdr");
	SetAccessNext(pCMFTZWAssembly, pCMGTOPart);

	//JGD
	NewAccess(CATCmdStarter, pCMJGDPart, CMJGDPart);
	SetAccessCommand(pCMJGDPart, "CMCreateJGDSystemHdr");
	SetAccessNext(pCMGTOPart, pCMJGDPart);

	//GTOBOM
	NewAccess(CATCmdStarter, pCMGTOBOMPart, CMGTOBOMPart);
	SetAccessCommand(pCMGTOBOMPart, "CMCreateGTOBOMSystemHdr");
	SetAccessNext(pCMJGDPart, pCMGTOBOMPart);

	//Operation
	NewAccess(CATCmdStarter, pCMOperationPart, CMOperationPart);
	SetAccessCommand(pCMOperationPart, "CMCreateOperationSystemHdr");
	SetAccessNext(pCMGTOBOMPart, pCMOperationPart);

	//GTO OP Duplicate
	NewAccess(CATCmdStarter, pCMDupGTOOPPart, CMDupGTOOPPart);
	SetAccessCommand(pCMDupGTOOPPart, "CMDuplicateGTOOPSystemHdr");
	SetAccessNext(pCMOperationPart, pCMDupGTOOPPart);

	return pGTODesignSection;
}
